"""Custom Module for testing of REGEX."""
import re
from datetime import datetime


def postal_code_validator(country: str, code: str) -> str:
    """
    Validates Postal Code for several countries.
    :param country: str
    :param code: str
    :return: str
    """
    if country == "Ukraine":
        if re.match(r"\d{5}$", code):
            return "Postal code is valid!"
        return "Postal code is NOT valid"
    if country == "USA":
        if re.match(r"\d{5}|\d{5}-\d{1,4}$", code):
            return "Postal code is valid!"
        return "Postal code is NOT valid"
    if country == "Canada":
        if re.match(r"\w{1}\d{1}\w{1}\s\d{1}\w{1}\d{1}$", code):
            return "Postal code is valid!"
        return "Postal code is NOT valid"
    return "Country is not supported! Please choose: Ukraine, USA or Canada"



def credit_card_validator(number: int, expiration_date: str, cvv: int) -> None:
    """
    Validates the card details.
    :param number: int
    :param expiration_date: str
    :param cvv: int
    :return: None
    """
    if re.match(r"\d{16}$", str(number)):
        print("Credit card number is valid!")
    else:
        print("Credit card number is NOT valid! Please check the format.")

    if re.match(r"\d{2}/\d{2}$", expiration_date) and 0 < int(expiration_date.split("/")[0]) <= 12:
        if (datetime.strptime(expiration_date, "%m/%y") >
                datetime.strptime(datetime.now().strftime("%m/%y"), "%m/%y")):
            print("Credit card expiration date is valid!")
        else:
            print("Credit card expiration date is outdated!")
    else:
        print("Credit card expiration date is NOT valid! Please check the format.")
    if re.match(r"\d{3}$", str(cvv)):
        print("Credit card CVV is valid!")
    else:
        print("Credit card CVV is NOT valid! Please check the format.")
