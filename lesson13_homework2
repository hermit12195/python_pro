"""Custom Module for Multy-threading tests"""
from pathlib import Path
import logging
import concurrent.futures
from PIL import Image, UnidentifiedImageError
import shortuuid

logging.basicConfig(level=logging.ERROR)


def image_resizer(image: Path, width: int, height: int, save=False):
    """
    Resizes and opens an image.
    :param image: str
    :param width: int
    :param height: int
    :return:
    """
    if isinstance(image, Path) and isinstance(width, int) and isinstance(height, int):
        try:
            image = Image.open(image)
            res_img = image.resize((width, height))
            res_img.show()
            if save:
                res_img.save(f"image{shortuuid.ShortUUID().random(length=5)}.png")
        except UnidentifiedImageError as e:
            logging.error(f"Error:{e}")
    else:
        logging.error(
            "Invalid data type! Please use str type for 'image' argument, int for 'width' and int for 'height'.")


with concurrent.futures.ThreadPoolExecutor(max_workers=5) as exe:
    for file in Path.cwd().iterdir():
        if file.is_file():
            try:
                (Image.open(file).verify())
            except UnidentifiedImageError:
                pass
            else:
                exe.submit(image_resizer, file, 40, 40, save=True)

print("The main thread is over!")
